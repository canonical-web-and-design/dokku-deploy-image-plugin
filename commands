#!/usr/bin/env bash
set -eo pipefail; [[ $DOKKU_TRACE ]] && set -x

case "$1" in
  deploy-image)
    # Read arguments
    image_location="$2"
    app_name="$3"
    [ -z "${image_location}" ] && echo "Please provide an image to deploy as the first argument" && exit 1
    [ -z "${app_name}" ] && echo "Please provide an application name as the second argument" && exit 1

    # Get the image
    docker pull ${image_location}

    # Tag it as a dokku image
    docker tag -f ${image_location} dokku/${app_name}

    # Make the directory
    mkdir -p ${DOKKU_ROOT}/${app_name}

    # Add a "CONTAINER.*" to make the dokku checks happy (for some reason)
    ln -s ${DOKKU_ROOT}/${app_name}/CONTAINER ${DOKKU_ROOT}/${app_name}/CONTAINER.99

    # Now deploy it
    pluginhook pre-deploy ${app_name}
    dokku deploy ${app_name}
    pluginhook post-deploy ${app_name}

    echo "Image ${image_location} deployed as ${app_name}"
    ;;

  deploy-image:create-postgresql-db)
    # Read arguments
    db_image="$2"; db_name="$3"

    [ -z "${db_image}" ] && echo "Please provide an image to deploy as the first argument" && exit 1
    [ -z "${db_name}" ] && echo "Please provide a name for the database as the second argument" && exit 1

    # Retrieve the image
    docker pull ${db_image}

    # Start the container
    docker rm -f ${db_name} 2> /dev/null || true
    docker run --name "${db_name}" -p 5432 -d ${db_image}

    ;;

  deploy-image:link-postgresql-db)
    # Read arguments
    db_name="$2"; app_name="$3"

    [ -z "${db_name}" ] && echo "Please provide a name for the database as the first argument" && exit 1
    [ -z "${app_name}" ] && echo "Please provide an application name as the second argument" && exit 1
    
    # Get IP and Port
    DB_CONTAINER_IP=$(docker inspect --format '{{ .NetworkSettings.Gateway }}' ${db_name})
    DB_CONTAINER_PORT=$(docker port "${db_name}" 5432 | sed 's/0.0.0.0://')

    # Link the app to this DB
    dokku config:set ${app_name} "DATABASE_URL=postgres://postgres@${DB_CONTAINER_IP}:${DB_CONTAINER_PORT}/postgres"

    ;;

esac
